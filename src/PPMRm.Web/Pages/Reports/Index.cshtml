@page
@using PPMRm.PeriodReports
@model PPMRm.Web.Pages.Reports.IndexModel
@section styles{
   
}
@{
    var defaultCSUpdateValue = "No new developments";
    ViewBag.FluidLayout = true;
}
@section scripts
{
    <abp-script src="/Pages/Reports/Index.js" />
    <abp-script src="/js/bootstrap-multiselect.min.js" />
    <abp-script src="/libs/datatables.net/js/jquery.dataTables.js" />
    <abp-script src="/js/jszip.min.js" />
    <abp-script src="/js/dataTables.buttons.min.js" />
    <abp-script src="/libs/datatables.net-bs4/js/dataTables.bootstrap4.js" />
    <abp-script src="/libs/chart.js/Chart.bundle.js" />
    <abp-script src="/js/buttons.html5.min.js" />
    <abp-script src="/js/html2pdf.bundle.min.js" />
}
<abp-card class="container">
    <abp-card-header>
                <abp-card-title>View Period Reports</abp-card-title><br />
            <abp-card-subtitle class="text-muted mb-3">This page shows reporting summary for each country</abp-card-subtitle>
            <form class="needs-validation" novalidate method="post">
  
<div class="form-row mt-3">
    <abp-input asp-for="@Model.SelectedPeriodId" value="@Model.SelectedPeriodId" />
    <div class="col-md-6 mb-3">
      <div class="input-group">
        <div class="input-group-prepend">
          <span class="input-group-text" id="inputGroupPrependCountry">Countries</span>
        </div>
        <select asp-for="@Model.SelectedCountries" asp-items="@Model.Countries"></select>
      </div>
    </div>
    <div class="col-md-6 mb-3">
      <div class="input-group">
        <div class="input-group-prepend">
          <span class="input-group-text" id="inputGroupPrependCountry">Period</span>
        </div>
      <input type="text" id="SelectedPeriod" asp-for="@Model.SelectedPeriod" name="SelectedPeriod" readonly="readonly" class="period-picker  form-control" />
      </div>
    </div>
        
  </div>

  <div class="form-row mt-3">
      <div class="col-md-12 mb-3">
      <div class="input-group">
        
      </div>
        <input type="submit" value="Generate" class="btn btn-primary form-control" />
    </div>
    
  </div>
</form>
        
    </abp-card-header>
    
        @if(Model.PeriodSummary != null)
        {
            <abp-card-body>
            <div class="row">
                <div class="col-sm-12 text-right">
                    <button id="btnPdf" class="btn btn-primary">Download PDF</button>
                </div>
            </div>
    </abp-card-body>
        }
</abp-card>
@if(Model.PeriodSummary != null)
{
    <header class="mt-5 mb-2" style="vertical-align:central;">
        <div class="row align-items-center">
            <div class="col-sm-3"  syle="zoom:50%;">
                <img class="img-fluid float-right" src="/logos/usaid_deliver-no-bg.png" alt="MDN logo" />
            </div>
            <div class="col-sm-6 text-center">
                <p class="lead">PROCUREMENT PLANNING AND MONITORING REPORT<br /> MALARIA (PPMRm) <br /> Status Report Summary Summary</p>
            </div>
            <div class="col-sm-3">
                <span class="lead text-center">@Model.PeriodSummary.Period.ShortName</span>
            </div>
        </div>
    </header>
        
        <div class="container-fluid">
            
        <h3 class="text-center">Stockouts</h3>
                <div class="chart-container mb-5">
                    <canvas id="chrtStockouts" ></canvas>
                    </div>
                <table class="table table-striped table-sm" id="tblStockouts">
                <thead>
                    <tr>
                        <th>Country</th>
                        <th>Product</th>
                        <th>Recommended Action</th>
                        <th>Date Action Needed By</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var c in Model.PeriodSummary.CountrySummaries.Where(x => x.Stockouts.Any()))
                    {
                        @foreach(var p in c.Stockouts)
                        {
                            <tr>
                                <td>@c.Country.Name</td>
                                <td>@p.Product.Name</td>
                                <td>@p.ActionRecommended</td>
                                <td>@p.DateActionNeededBy?.ToString(PeriodReportConsts.DataFormatting.DateFormat)</td>
                            </tr>
                        }
                    }
                    @if(!Model.PeriodSummary.CountrySummaries.Where(x => x.Stockouts.Any()).Any())
                    {
                        <tr>
                            <td colspan="5" class="text-center">No Stockouts reported for period</td>
                        </tr>
                    }

                </tbody>
            
                </table>
                </div>
                <div class="page-break"></div>
<div class="container-fluid">
    <h3 class="text-center">Shortages</h3>
                <div class="chart-container mb-5">
                    <canvas id="chrtShortages" ></canvas>
                    </div>
                <table class="table table-striped table-sm" id="tblShortages">
                <thead>
                    <tr>
                        <th>Country</th>
                        <th>Product</th>
                        <th>MOS</th>
                        <th>Recommended Action</th>
                        <th>Date Action Needed By</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var c in Model.PeriodSummary.CountrySummaries.Where(x => x.Shortages.Any()))
                    {
                        @foreach(var p in c.Shortages)
                        {
                            <tr>
                                <td>@c.Country.Name</td>
                                <td>@p.Product.Name</td>
                                <td>@p.MOS?.ToString("N1")</td>
                                <td>@p.ActionRecommended</td>
                                <td>@p.DateActionNeededBy?.ToString(PeriodReportConsts.DataFormatting.DateFormat)</td>
                            </tr>
                        }
                    }
                    @if(!Model.PeriodSummary.CountrySummaries.Where(x => x.Shortages.Any()).Any())
                    {
                        <tr>
                            <td colspan="5" class="text-center">No Shortages reported for period</td>
                        </tr>
                    }

                </tbody>
            
                </table>
                </div>
                <div class="page-break"></div>

                <div class="container-fluid">
    <h3 class="text-center">Over Supply</h3>
                <div class="chart-container mb-5">
                    <canvas id="chrtOversupplies" ></canvas>
                    </div>
                <table class="table table-striped table-sm" id="tblOversupply">
                <thead>
                    <tr>
                        <th>Country</th>
                        <th>Product</th>
                        <th>MOS</th>
                        <th>Recommended Action</th>
                        <th>Date Action Needed By</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var c in Model.PeriodSummary.CountrySummaries.Where(x => x.Oversupply.Any()))
                    {
                        @foreach(var p in c.Oversupply)
                        {
                            <tr>
                                <td>@c.Country.Name</td>
                                <td>@p.Product.Name</td>
                                <td>@p.MOS?.ToString("N1")</td>
                                <td>@p.ActionRecommended</td>
                                <td>@p.DateActionNeededBy?.ToString(PeriodReportConsts.DataFormatting.DateFormat)</td>
                            </tr>
                        }
                    }
                    @if(!Model.PeriodSummary.CountrySummaries.Where(x => x.Oversupply.Any()).Any())
                    {
                        <tr>
                            <td colspan="5" class="text-center">No Over Supply reported for period</td>
                        </tr>
                    }

                </tbody>
            
                </table>
                </div>
                
                @foreach(var c in Model.PeriodSummary.CountrySummaries.OrderBy(x => x.Country.Name))
                {
                <div class="page-break"></div>
                    
                    <div class="container-fluid" id="countryStatus">
                        <div class="jumbotron jumbotron-fluid">
                          <div class="container">
                            <h1 class="display-5">@c.Country.Name</h1>
                            <p class="lead">Min: @c.Country.MinStock - Max: @c.Country.MaxStock</p>
                          </div>
                        </div>
                        <table class="table table-sm caption-top">
                            <caption class="text-center text-capitalize" style="caption-side:top;">Commodity Security Updates</caption>
                            <tbody>
                                <tr>
                                    <th style="width: 33.33%">Forecasting and Supply Planning</th>
                                    <td style="width: 66.66%">@(c.CSUpdates?.ForecastingAndSupplyPlanning ?? @defaultCSUpdateValue)</td>
                                </tr>
                                <tr>
                                    <th>Procurement, Product Information and Registration</th>
                                    <td>@(c.CSUpdates?.ProcurementProductInformationAndRegistration ?? defaultCSUpdateValue)</td>
                                </tr>
                                <tr>
                                    <th class="width-20">Warehousing and Distribution</th>
                                    <td>@(c.CSUpdates?.WarehousingAndDistribution ?? defaultCSUpdateValue)</td>
                                </tr>
                                <tr>
                                    <th>Logistic Management Information System (LMIS)</th>
                                    <td>@(c.CSUpdates?.LogisticsManagementInformationSystem ?? defaultCSUpdateValue)</td>
                                </tr>
                                <tr>
                                    <th class="width-20">Governance and Financing</th>
                                    <td>@(c.CSUpdates?.GovernanceAndFinancing ?? defaultCSUpdateValue)</td>
                                </tr>
                                <tr>
                                    <th>Human Resources, Capacity Development, and Training</th>
                                    <td>@(c.CSUpdates?.HumanResourcesCapacityDevelopmentAndTraining ?? defaultCSUpdateValue)</td>
                                </tr>
                                <tr>
                                    <th class="width-20">Supply Chain Committee, Policy, and Donor Coordination</th>
                                    <td>@(c.CSUpdates?.SupplyChainCommitteePolicyAndDonorCoordination ?? defaultCSUpdateValue)</td>
                                </tr>
                                <tr>
                                    <th>Product Stock Levels Information</th>
                                    <td>@(c.CSUpdates?.ProductStockLevelsInformation ?? defaultCSUpdateValue)</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                <div class="page-break"></div>
                @foreach(var prog in c.Programs)
                {
                    <table class="table table-sm">
                            <caption class="text-center text-capitalize" style="caption-side:top;">@prog.Name - SOH Levels: @(c.SOHLevels?.Count > 0 ? string.Join(", ", @c.SOHLevels): "None")</caption>
                            <thead>
                    <tr>
                        <th>Product</th>
                        <th>MOS</th>
                        <th>AMC</th>
                        <th>SOH</th>
                        <th>Date of SOH</th>
                        <th>Next Shipment Quantity</th>
                        <th>Date of Next Shipment</th>
                        <th>Supplier</th>
                        <th>Recommended Action</th>
                        <th>Date Action Needed By</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var p in c.Products.Where(x => x.Program.Id == prog.Id))
                    {
                        
                            <tr>
                                <td>@p.Product.Name</td>
                                <td>@p.MOS?.ToString("N1")</td>
                                <td>@p.AMC?.ToString("N0")</td>
                                <td>@p.SOH?.ToString("N0")</td>
                                <td>@p.DateOfSOH?.ToString(PPMRm.PeriodReports.PeriodReportConsts.DataFormatting.DateFormat)</td>
                                @if(@p.Shipments?.Count > 0)
                                {
                                    <td>
                                    <table border="0" width="100%">
                                              <tbody>
                                    @foreach(var s in p.Shipments.Select((value, i) => (value, i)))
                                    {
                                       <tr>
                                            <td>
                                            <span class="text-center small">Shipment @(s.i + 1)<br/>@s.value.Quantity.ToString(PPMRm.PeriodReports.PeriodReportConsts.DataFormatting.SOH_AMC_Format)</span></td>
                                       </tr>
                                    }
                                    </tbody>
                                    </table>
                                    </td>
                                    <td>
                                    <table border="0" width="100%">
                                              <tbody>
                                    @foreach(var s in p.Shipments.Select((value, i) => (value, i)))
                                    {
                                       <tr>
                                             <td>
                                                <span class="text-center small">@(s.value.ShipmentDate?.ToString(PPMRm.PeriodReports.PeriodReportConsts.DataFormatting.DateFormat) ?? "-")<br/>@s.value.ShipmentDateType</span>
                                            </td>
                                       </tr>
                                    }
                                    </tbody>
                                    </table>
                                    </td>
                                    <td>
                                    <table border="0" width="100%">
                                              <tbody>
                                    @foreach(var s in p.Shipments.Select((value, i) => (value, i)))
                                    {
                                       <tr>
                                            <td>
                                                <span class="text-center small">@s.value.Supplier<br/>&nbsp;</span>
                                            </td>
                                       </tr>
                                    }
                                    </tbody>
                                    </table>
                                    </td>
                                               
                                    
                                }
                                else
                                {
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                }
                                <!--<td>
                                <table width="100%">
                                      <tbody>
                                        
                                        @foreach(var s in p?.Shipments.Select((value, i) => ( value, i)))
                                        {
                                            <tr>
                                                  <td>Shipment @(s.i + 1)</td>
                                                  <td class="middle">@s.value.Quantity.ToString(PPMRm.PeriodReports.PeriodReportConsts.DataFormatting.SOH_AMC_Format)</td>
                                            </tr>
                                        }
                                      </tbody>
                                    </table>
                                
                                </td>
                                <td> @foreach(var s in p?.Shipments)
                                {
                                    <span>@s.ShipmentDate?.ToString("dd MM yyyy")</span><br /><br />
                                }
                                </td>
                                <td>
                                 @foreach(var s in p?.Shipments)
                                {
                                    <span>@s.Supplier</span><br /><br />
                                }
                                </td> -->
                                <td>@p.ActionRecommended</td>
                                <td>@p.DateActionNeededBy?.ToString(PeriodReportConsts.DataFormatting.DateFormat)</td>
                            </tr>
                    }
                    @if(!c.Products.Where(x => x.Program.Id == prog.Id).Any())
                    {
                        <tr>
                            <td colspan="10" class="text-center">No products reported for this program</td>
                        </tr>
                    }

                </tbody>
                    </table>
                }
                }

     }
